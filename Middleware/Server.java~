import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
//import java.io.*;
import java.net.ServerSocket;
import java.net.Socket;

public class Server implements Runnable{

    private final Socket m_socket;
    private final int m_num;
    static ServiceRegistry[] sr=new ServiceRegistry[10];
    static int last=0;
   
    Server(Socket socket, int num){

        m_socket = socket;
        m_num = num;

	        
        Thread handler = new Thread(this, "handler-" + m_num);
        handler.start();
    }
    
    public void run(){

        try{
            try{
		
		
                System.out.println(m_num + " Connected.");
                BufferedReader in = new BufferedReader(new InputStreamReader(m_socket.getInputStream()));

		
                OutputStreamWriter out = new OutputStreamWriter(m_socket.getOutputStream());
                out.write("Welcome connection #" + m_num + "\n\r");
                out.flush();
                
                while(true){
                    String line = in.readLine();
                    if (line == null){
                        System.out.println( m_num + " Closed." );
                        return;

                    }else{

                        System.out.println(m_num + " Read Input: " + line );
                        if(line.equals("exit")){
                            System.out.println(m_num + " Closing Connection.");
                            return;
                        }
                        //else if(line.equals("crash")){
                        //    System.out.println(m_num + " Simulating a crash of the Server..");
                        //    Runtime.getRuntime().halt(0);
                        //}
                        else{
                            System.out.println(m_num + " Looking up: " + line);
			    Service s = Register.lookup(line);  //Lookup service requested
			    if(s!=null){
				out.write("Found service.. "+s.mainService()+"\n");
				System.out.println(m_num + " Found service: " + line);	
			    	//out.write(s.mainService()+"\n");	
				
		            }else{
			    	out.write("Service is Not Available..\n\r");
				System.out.println(m_num + " Service not Found: " + line);
			    }
                            //out.write( "echo " + line + "\n\r" );
                            out.flush();
                        }
                    }
                }
            }finally{
                m_socket.close();
            }
        }catch(IOException e){
            System.out.println( m_num + " Error: " + e.toString() );
        }
    }
            
    public static void main(String[] args) throws Exception{
	
	//Register service1
	String serviceName = "ADD";
	Service1 newServ = new Service1(serviceName);
	Register.registerService(serviceName,newServ);

	//Register service2
	String serviceName2 = "EXP";
	Service2 serv2 = new Service2(serviceName2);
	Register.registerService(serviceName2,serv2);	
	
	//Create socket server
        int port = 9000;

        if(args.length > 0){
            port = Integer.parseInt(args[0]);
        }

	System.out.println("Accepting connections on port: " + port);
        int nextNum = 1;
        ServerSocket serverSocket = new ServerSocket(port);
        while(true){
            Socket socket = serverSocket.accept();
            Server hw = new Server(socket, nextNum++);
        }
    }
}
